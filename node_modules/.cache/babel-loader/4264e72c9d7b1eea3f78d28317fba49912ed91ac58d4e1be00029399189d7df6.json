{"ast":null,"code":"import Message from './Message';\nexport default {\n  name: \"GridPedidos\",\n  data() {\n    return {\n      burgers: null,\n      burger_id: null,\n      status: []\n    };\n  },\n  components: {\n    Message\n  },\n  methods: {\n    async getPedidos() {\n      const req = await fetch('http://localhost:3000/burgers');\n      const data = await req.json();\n      this.burgers = data;\n\n      // Resgata os status de pedidos\n      this.getStatus();\n    },\n    async getStatus() {\n      const req = await fetch('http://localhost:3000/status');\n      const data = await req.json();\n      this.status = data;\n    },\n    async deleteBurger(id) {\n      const req = await fetch(`http://localhost:3000/burgers/${id}`, {\n        method: \"DELETE\"\n      });\n      const res = await req.json();\n      this.msg = \"Pedido cancelado com sucesso!\";\n      this.getPedidos();\n      setTimeout(() => this.msg = \"\", 3000);\n    },\n    async updateBurger(event, id) {\n      const option = event.target.value;\n      const dataJson = JSON.stringify({\n        status: option\n      });\n      const req = await fetch(`http://localhost:3000/burgers/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: dataJson\n      });\n      const res = await req.json();\n      console.log(res);\n      this.msg = \"Pedido alterado com sucesso!\";\n    }\n  },\n  mounted() {\n    this.getPedidos();\n  }\n};","map":{"version":3,"names":["Message","name","data","burgers","burger_id","status","components","methods","getPedidos","req","fetch","json","getStatus","deleteBurger","id","method","res","msg","setTimeout","updateBurger","event","option","target","value","dataJson","JSON","stringify","headers","body","console","log","mounted"],"sources":["/Users/hoffmann/VscodeProjects/burguer/src/components/GridPedidos.vue"],"sourcesContent":["<template>\n    <div id=\"burger-table\" v-if=\"burgers\">\n        <Message :msg=\"msg\"  v-show=\"msg\"/>\n        <div>\n            <div id=\"burger-table-heading\">\n                <div class=\"order-id\">#:</div>\n                <div>Cliente:</div>\n                <div>Pão:</div>\n                <div>Carne:</div>\n                <div>Opcionais:</div>\n                <div>Ações:</div>\n            </div>\n        </div>\n        <div id=\"burger-table-rows\">\n            <div class=\"burger-table-row\" v-for=\"burger in burgers\" :key=\"burger.id\">\n                <div class=\"order-number\">{{ burger.id }}</div>\n                <div>{{ burger.nome }}</div>\n                <div>{{ burger.pao }}</div>\n                <div>{{ burger.carne }}</div>\n                <div>\n                    <ul v-for=\"(opcional, index) in burger.opcionais\" :key=\"index\">\n                        <li>{{ opcional }}</li>\n                    </ul>\n                </div>\n                <div>\n                    <select name=\"status\" class=\"status\" @change=\"updateBurger($event, burger.id)\">\n                        <option :value=\"s.tipo\" v-for=\"s in status\" :key=\"s.id\" :selected=\"burger.status == s.tipo\">\n                            {{ s.tipo }}\n                        </option>\n                    </select>\n                    <button class=\"delete-btn\" @click=\"deleteBurger(burger.id)\">Cancelar</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div v-else>\n        <h2>Não há pedidos no momento!</h2>\n    </div>\n</template>\n\n<script>\n\nimport Message from './Message'\n\nexport default {\n    name: \"GridPedidos\",\n    data() {\n        return {\n            burgers: null,\n            burger_id: null,\n            status: []\n        }\n    },\n    components:{\n        Message\n    },\n    methods: {\n        async getPedidos() {\n            const req = await fetch('http://localhost:3000/burgers')\n\n            const data = await req.json()\n\n            this.burgers = data\n\n            // Resgata os status de pedidos\n            this.getStatus()\n\n        },\n\n        async getStatus() {\n\n            const req = await fetch('http://localhost:3000/status')\n\n            const data = await req.json()\n\n            this.status = data\n\n        },\n\n        async deleteBurger(id) {\n\n            const req = await fetch(`http://localhost:3000/burgers/${id}`, {\n                method: \"DELETE\"\n            });\n\n            const res = await req.json();\n\n            this.msg = \"Pedido cancelado com sucesso!\";\n\n            this.getPedidos();\n\n            setTimeout(() => this.msg = \"\", 3000)\n\n        },\n\n        async updateBurger(event, id) {\n\n            const option = event.target.value;\n\n            const dataJson = JSON.stringify({ status: option });\n\n            const req = await fetch(`http://localhost:3000/burgers/${id}`, {\n                method: \"PATCH\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: dataJson\n            });\n\n            const res = await req.json();\n            console.log(res);\n\n            this.msg = \"Pedido alterado com sucesso!\";\n\n        }\n    },\n    mounted() {\n        this.getPedidos()\n    }\n}\n\n</script>\n\n<style scoped>\n#burger-table {\n    max-width: 1200px;\n    margin: 0 auto;\n}\n\n#burger-table-heading,\n#burger-table-rows,\n.burger-table-row {\n    display: flex;\n    flex-wrap: wrap;\n}\n\n#burger-table-heading {\n    font-weight: bold;\n    padding: 12px;\n    border-bottom: 3px solid #333;\n}\n\n.burger-table-row {\n    width: 100%;\n    padding: 12px;\n    border-bottom: 1px solid #CCC;\n}\n\n#burger-table-heading div,\n.burger-table-row div {\n    width: 19%;\n}\n\n#burger-table-heading .order-id,\n.burger-table-row .order-number {\n    width: 5%;\n}\n\nselect {\n    padding: 12px 6px;\n    margin-right: 12px;\n}\n\n.delete-btn {\n    background-color: #222;\n    color: #fcba03;\n    font-weight: bold;\n    border: 2px solid #222;\n    padding: 10px;\n    font-size: 16px;\n    margin: 0 auto;\n    cursor: pointer;\n    transition: .5s;\n}\n\n.delete-btn:hover {\n    background-color: transparent;\n    color: #222;\n}\n</style>\n  "],"mappings":"AA0CA,OAAOA,OAAM,MAAO,WAAU;AAE9B,eAAe;EACXC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE;IACZ;EACJ,CAAC;EACDC,UAAU,EAAC;IACPN;EACJ,CAAC;EACDO,OAAO,EAAE;IACL,MAAMC,UAAUA,CAAA,EAAG;MACf,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAAC,+BAA+B;MAEvD,MAAMR,IAAG,GAAI,MAAMO,GAAG,CAACE,IAAI,CAAC;MAE5B,IAAI,CAACR,OAAM,GAAID,IAAG;;MAElB;MACA,IAAI,CAACU,SAAS,CAAC;IAEnB,CAAC;IAED,MAAMA,SAASA,CAAA,EAAG;MAEd,MAAMH,GAAE,GAAI,MAAMC,KAAK,CAAC,8BAA8B;MAEtD,MAAMR,IAAG,GAAI,MAAMO,GAAG,CAACE,IAAI,CAAC;MAE5B,IAAI,CAACN,MAAK,GAAIH,IAAG;IAErB,CAAC;IAED,MAAMW,YAAYA,CAACC,EAAE,EAAE;MAEnB,MAAML,GAAE,GAAI,MAAMC,KAAK,CAAC,iCAAiCI,EAAE,EAAE,EAAE;QAC3DC,MAAM,EAAE;MACZ,CAAC,CAAC;MAEF,MAAMC,GAAE,GAAI,MAAMP,GAAG,CAACE,IAAI,CAAC,CAAC;MAE5B,IAAI,CAACM,GAAE,GAAI,+BAA+B;MAE1C,IAAI,CAACT,UAAU,CAAC,CAAC;MAEjBU,UAAU,CAAC,MAAM,IAAI,CAACD,GAAE,GAAI,EAAE,EAAE,IAAI;IAExC,CAAC;IAED,MAAME,YAAYA,CAACC,KAAK,EAAEN,EAAE,EAAE;MAE1B,MAAMO,MAAK,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK;MAEjC,MAAMC,QAAO,GAAIC,IAAI,CAACC,SAAS,CAAC;QAAErB,MAAM,EAAEgB;MAAO,CAAC,CAAC;MAEnD,MAAMZ,GAAE,GAAI,MAAMC,KAAK,CAAC,iCAAiCI,EAAE,EAAE,EAAE;QAC3DC,MAAM,EAAE,OAAO;QACfY,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEJ;MACV,CAAC,CAAC;MAEF,MAAMR,GAAE,GAAI,MAAMP,GAAG,CAACE,IAAI,CAAC,CAAC;MAC5BkB,OAAO,CAACC,GAAG,CAACd,GAAG,CAAC;MAEhB,IAAI,CAACC,GAAE,GAAI,8BAA8B;IAE7C;EACJ,CAAC;EACDc,OAAOA,CAAA,EAAG;IACN,IAAI,CAACvB,UAAU,CAAC;EACpB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}