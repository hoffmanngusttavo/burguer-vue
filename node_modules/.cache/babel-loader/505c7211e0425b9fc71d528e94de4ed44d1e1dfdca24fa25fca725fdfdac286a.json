{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox } from \"vue\";\nconst _hoisted_1 = {\n  class: \"input-container\"\n};\nconst _hoisted_2 = {\n  class: \"input-container\"\n};\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = {\n  class: \"input-container\"\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  id: \"opcionais-container\",\n  class: \"input-container\"\n};\nconst _hoisted_7 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    id: \"burger-form\",\n    method: \"POST\",\n    onSubmit: _cache[4] || (_cache[4] = (...args) => _ctx.createBurger && _ctx.createBurger(...args))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"nome\"\n  }, \"Nome do cliente:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"nome\",\n    name: \"nome\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.nome = $event),\n    placeholder: \"Digite o seu nome\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.nome]])]), _createElementVNode(\"div\", _hoisted_2, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"pao\"\n  }, \"Escolha o p達o:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    name: \"pao\",\n    id: \"pao\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.pao = $event)\n  }, [_cache[6] || (_cache[6] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"Selecione o seu p達o\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.paes, pao => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: pao.id,\n      value: pao.tipo\n    }, _toDisplayString(pao.tipo), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.pao]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"carne\"\n  }, \"Escolha a carne do seu Burger:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    name: \"carne\",\n    id: \"carne\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.carne = $event)\n  }, [_cache[8] || (_cache[8] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"Selecione o tipo de carne\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.carnes, carne => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: carne.id,\n      value: carne.tipo\n    }, _toDisplayString(carne.tipo), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.carne]])]), _createElementVNode(\"div\", _hoisted_6, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    id: \"opcionais-title\",\n    for: \"opcionais\"\n  }, \"Selecione os opcionais:\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.opcionaisdata, opcional => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"checkbox-container\",\n      key: opcional.id\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      name: \"opcionais\",\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.opcionais = $event),\n      value: opcional.tipo\n    }, null, 8 /* PROPS */, _hoisted_7), [[_vModelCheckbox, $data.opcionais]]), _createElementVNode(\"span\", null, _toDisplayString(opcional.tipo), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _cache[11] || (_cache[11] = _createElementVNode(\"div\", {\n    class: \"input-container\"\n  }, [_createElementVNode(\"input\", {\n    class: \"submit-btn\",\n    type: \"submit\",\n    value: \"Criar meu Burger!\"\n  })], -1 /* HOISTED */))], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["class","id","_createElementBlock","method","onSubmit","_cache","args","_ctx","createBurger","_createElementVNode","_hoisted_1","for","type","name","$event","$data","nome","placeholder","_hoisted_2","pao","value","_Fragment","_renderList","paes","key","tipo","_hoisted_3","_hoisted_4","carne","carnes","_hoisted_5","_hoisted_6","opcionaisdata","opcional","opcionais","_hoisted_7","_toDisplayString"],"sources":["/Users/hoffmann/VscodeProjects/burguer/src/components/BurgerForm.vue"],"sourcesContent":["<template>\n    <form id=\"burger-form\" method=\"POST\" @submit=\"createBurger\">\n        <div class=\"input-container\">\n            <label for=\"nome\">Nome do cliente:</label>\n            <input type=\"text\" id=\"nome\" name=\"nome\" v-model=\"nome\" placeholder=\"Digite o seu nome\">\n        </div>\n        <div class=\"input-container\">\n            <label for=\"pao\">Escolha o p達o:</label>\n            <select name=\"pao\" id=\"pao\" v-model=\"pao\">\n                <option value=\"\">Selecione o seu p達o</option>\n                <option v-for=\"pao in paes\" :key=\"pao.id\" :value=\"pao.tipo\">{{ pao.tipo }}</option>\n            </select>\n        </div>\n        <div class=\"input-container\">\n            <label for=\"carne\">Escolha a carne do seu Burger:</label>\n            <select name=\"carne\" id=\"carne\" v-model=\"carne\">\n                <option value=\"\">Selecione o tipo de carne</option>\n                <option v-for=\"carne in carnes\" :key=\"carne.id\" :value=\"carne.tipo\">{{ carne.tipo }}</option>\n            </select>\n        </div>\n        <div id=\"opcionais-container\" class=\"input-container\">\n            <label id=\"opcionais-title\" for=\"opcionais\">Selecione os opcionais:</label>\n            <div class=\"checkbox-container\" v-for=\"opcional in opcionaisdata\" :key=\"opcional.id\">\n                <input type=\"checkbox\" name=\"opcionais\" v-model=\"opcionais\" :value=\"opcional.tipo\">\n                <span>{{ opcional.tipo }}</span>\n            </div>\n        </div>\n        <div class=\"input-container\">\n            <input class=\"submit-btn\" type=\"submit\" value=\"Criar meu Burger!\">\n        </div>\n    </form>\n</template>\n\n<script>\nexport default {\n    name: \"BurgerForm\",\n    data() {\n        return {\n            paes: null,\n            carnes: null,\n            opcionaisdata: null,\n            nome: null,\n            pao: null,\n            carne: null,\n            opcionais: [],\n            status: \"Solicitado\",\n            msg: null\n        }\n    }\n}\n\n</script>\n\n<style scoped>\n#burger-form {\n    max-width: 400px;\n    margin: 0 auto;\n}\n\n.input-container {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n}\n\nlabel {\n    font-weight: bold;\n    margin-bottom: 15px;\n    color: #222;\n    ;\n    padding: 5px 10px;\n    border-left: 4px solid #fcba03;\n}\n\ninput,\nselect {\n    padding: 5px 10px;\n    width: 300px;\n}\n\n#opcionais-container {\n    flex-direction: row;\n    flex-wrap: wrap;\n}\n\n#opcionais-title {\n    width: 100%;\n}\n\n.checkbox-container {\n    display: flex;\n    align-items: flex-start;\n    width: 50%;\n    margin-bottom: 20px;\n}\n\n.checkbox-container span,\n.checkbox-container input {\n    width: auto;\n}\n\n.checkbox-container span {\n    margin-left: 6px;\n    font-weight: bold;\n}\n\n.submit-btn {\n    background-color: #222;\n    color: #fcba03;\n    font-weight: bold;\n    border: 2px solid #222;\n    padding: 10px;\n    font-size: 16px;\n    margin: 0 auto;\n    cursor: pointer;\n    transition: .5s;\n}\n\n.submit-btn:hover {\n    background-color: transparent;\n    color: #222;\n}\n</style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}