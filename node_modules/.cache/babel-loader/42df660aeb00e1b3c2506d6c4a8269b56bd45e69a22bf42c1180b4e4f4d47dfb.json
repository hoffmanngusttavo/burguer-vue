{"ast":null,"code":"import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, createElementVNode as _createElementVNode, vModelText as _vModelText, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox } from \"vue\";\nconst _hoisted_1 = {\n  class: \"input-container\"\n};\nconst _hoisted_2 = {\n  class: \"input-container\"\n};\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = {\n  class: \"input-container\"\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  id: \"opcionais-container\",\n  class: \"input-container\"\n};\nconst _hoisted_7 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Message = _resolveComponent(\"Message\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createVNode(_component_Message, {\n    msg: $data.msg\n  }, null, 8 /* PROPS */, [\"msg\"]), [[_vShow, $data.msg]]), _createElementVNode(\"div\", null, [_createElementVNode(\"form\", {\n    id: \"burger-form\",\n    method: \"POST\",\n    onSubmit: _cache[4] || (_cache[4] = (...args) => $options.createBurger && $options.createBurger(...args))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"nome\"\n  }, \"Nome do cliente:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"nome\",\n    name: \"nome\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.nome = $event),\n    placeholder: \"Digite o seu nome\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.nome]])]), _createElementVNode(\"div\", _hoisted_2, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"pao\"\n  }, \"Escolha o p達o:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    name: \"pao\",\n    id: \"pao\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.pao = $event)\n  }, [_cache[6] || (_cache[6] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"Selecione o seu p達o\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.paes, pao => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: pao.id,\n      value: pao.tipo\n    }, _toDisplayString(pao.tipo), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.pao]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"carne\"\n  }, \"Escolha a carne do seu Burger:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    name: \"carne\",\n    id: \"carne\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.carne = $event)\n  }, [_cache[8] || (_cache[8] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"Selecione o tipo de carne\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.carnes, carne => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: carne.id,\n      value: carne.tipo\n    }, _toDisplayString(carne.tipo), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.carne]])]), _createElementVNode(\"div\", _hoisted_6, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    id: \"opcionais-title\",\n    for: \"opcionais\"\n  }, \"Selecione os opcionais:\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.opcionaisdata, opcional => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"checkbox-container\",\n      key: opcional.id\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      name: \"opcionais\",\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.opcionais = $event),\n      value: opcional.tipo\n    }, null, 8 /* PROPS */, _hoisted_7), [[_vModelCheckbox, $data.opcionais]]), _createElementVNode(\"span\", null, _toDisplayString(opcional.tipo), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _cache[11] || (_cache[11] = _createElementVNode(\"div\", {\n    class: \"input-container\"\n  }, [_createElementVNode(\"input\", {\n    class: \"submit-btn\",\n    type: \"submit\",\n    value: \"Criar meu Burger!\"\n  })], -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","id","_createElementBlock","_Fragment","_createVNode","_component_Message","msg","$data","_createElementVNode","method","onSubmit","_cache","args","$options","createBurger","_hoisted_1","for","type","name","required","$event","nome","placeholder","_hoisted_2","pao","value","_renderList","paes","key","tipo","_hoisted_3","_hoisted_4","carne","carnes","_hoisted_5","_hoisted_6","opcionaisdata","opcional","opcionais","_hoisted_7","_toDisplayString"],"sources":["/Users/hoffmann/VscodeProjects/burguer/src/components/BurgerForm.vue"],"sourcesContent":["<template>\n    <Message :msg=\"msg\" v-show=\"msg\" />\n    <div>\n        <form id=\"burger-form\" method=\"POST\" @submit=\"createBurger\">\n            <div class=\"input-container\">\n                <label for=\"nome\">Nome do cliente:</label>\n                <input type=\"text\" id=\"nome\" name=\"nome\" required\n                     v-model=\"nome\" placeholder=\"Digite o seu nome\">\n            </div>\n            <div class=\"input-container\">\n                <label for=\"pao\">Escolha o p達o:</label>\n                <select name=\"pao\" id=\"pao\" v-model=\"pao\">\n                    <option value=\"\">Selecione o seu p達o</option>\n                    <option v-for=\"pao in paes\" :key=\"pao.id\" :value=\"pao.tipo\">{{ pao.tipo }}</option>\n                </select>\n            </div>\n            <div class=\"input-container\">\n                <label for=\"carne\">Escolha a carne do seu Burger:</label>\n                <select name=\"carne\" id=\"carne\" v-model=\"carne\">\n                    <option value=\"\">Selecione o tipo de carne</option>\n                    <option v-for=\"carne in carnes\" :key=\"carne.id\" :value=\"carne.tipo\">{{ carne.tipo }}</option>\n                </select>\n            </div>\n            <div id=\"opcionais-container\" class=\"input-container\">\n                <label id=\"opcionais-title\" for=\"opcionais\">Selecione os opcionais:</label>\n                <div class=\"checkbox-container\" v-for=\"opcional in opcionaisdata\" :key=\"opcional.id\">\n                    <input type=\"checkbox\" name=\"opcionais\" v-model=\"opcionais\" :value=\"opcional.tipo\">\n                    <span>{{ opcional.tipo }}</span>\n                </div>\n            </div>\n            <div class=\"input-container\">\n                <input class=\"submit-btn\" type=\"submit\" value=\"Criar meu Burger!\">\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\n\nimport Message from './Message'\n\nexport default {\n    name: \"BurgerForm\",\n    data() {\n        return {\n            paes: null,\n            carnes: null,\n            opcionaisdata: null,\n            nome: null,\n            pao: null,\n            carne: null,\n            opcionais: [],\n            status: \"Solicitado\",\n            msg: null\n        }\n    },\n    methods: {\n        async getIngredientes() {\n            const req = await fetch('http://localhost:3000/ingredientes')\n            const data = await req.json()\n\n            this.paes = data.paes\n            this.carnes = data.carnes\n            this.opcionaisdata = data.opcionais\n        },\n\n        async createBurger(e) {\n\n            e.preventDefault()\n\n            const data = {\n                nome: this.nome,\n                carne: this.carne,\n                pao: this.pao,\n                opcionais: Array.from(this.opcionais),\n                status: \"Solicitado\"\n            }\n\n            const dataJson = JSON.stringify(data)\n\n            const req = await fetch(\"http://localhost:3000/burgers\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: dataJson\n            });\n\n            const res = await req.json()\n\n            console.log(res)\n\n            this.msg = \"Pedido realizado com sucesso!\"\n\n            // clear message\n            setTimeout(() => this.msg = \"\", 3000)\n\n            // limpar campos\n            this.nome = \"\"\n            this.carne = \"\"\n            this.pao = \"\"\n            this.opcionais = []\n\n        }\n    },\n    mounted() {\n        this.getIngredientes()\n    },\n}\n\n</script>\n\n<style scoped>\n#burger-form {\n    max-width: 400px;\n    margin: 0 auto;\n}\n\n.input-container {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n}\n\nlabel {\n    font-weight: bold;\n    margin-bottom: 15px;\n    color: #222;\n    ;\n    padding: 5px 10px;\n    border-left: 4px solid #fcba03;\n}\n\ninput,\nselect {\n    padding: 5px 10px;\n    width: 300px;\n}\n\n#opcionais-container {\n    flex-direction: row;\n    flex-wrap: wrap;\n}\n\n#opcionais-title {\n    width: 100%;\n}\n\n.checkbox-container {\n    display: flex;\n    align-items: flex-start;\n    width: 50%;\n    margin-bottom: 20px;\n}\n\n.checkbox-container span,\n.checkbox-container input {\n    width: auto;\n}\n\n.checkbox-container span {\n    margin-left: 6px;\n    font-weight: bold;\n}\n\n.submit-btn {\n    background-color: #222;\n    color: #fcba03;\n    font-weight: bold;\n    border: 2px solid #222;\n    padding: 10px;\n    font-size: 16px;\n    margin: 0 auto;\n    cursor: pointer;\n    transition: .5s;\n}\n\n.submit-btn:hover {\n    background-color: transparent;\n    color: #222;\n}\n</style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}